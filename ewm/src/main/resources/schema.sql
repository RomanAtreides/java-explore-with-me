-- Users
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (email)
);

-- Friendship
CREATE TABLE IF NOT EXISTS friendship (
    friendship_status VARCHAR(64) NOT NULL,
    requester_id BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    changed TIMESTAMP WITHOUT TIME ZONE,
    PRIMARY KEY (requester_id, friend_id),
    FOREIGN KEY (requester_id) REFERENCES users ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users ON DELETE CASCADE
);

-- Categories
CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);

-- Events
CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(2000),
    category_id BIGINT,
    confirmed_requests BIGINT,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id BIGINT,
    latitude REAL,
    longitude REAL,
    paid BOOLEAN,
    participant_limit INT,
    published_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    request_moderation BOOLEAN,
    state VARCHAR(64) NOT NULL,
    title VARCHAR(120) NOT NULL,
    views BIGINT,
    PRIMARY KEY (id),
    FOREIGN KEY (category_id) REFERENCES categories,
    FOREIGN KEY (initiator_id) REFERENCES users,
    UNIQUE (title)
);

-- Participation requests
CREATE TABLE IF NOT EXISTS participation_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    status VARCHAR(64) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (event_id) REFERENCES events,
    FOREIGN KEY (requester_id) REFERENCES users
);

-- Compilations
CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id BIGINT,
    pinned BOOLEAN,
    title VARCHAR(512) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (title)
);

-- Compilations and Events join table
CREATE TABLE IF NOT EXISTS compilation_of_events (
    compilation_id BIGINT,
    event_id BIGINT,
    FOREIGN KEY (compilation_id) REFERENCES compilations,
    FOREIGN KEY (event_id) REFERENCES events
);
